Migration from OTOBO 10 / OTRS
------------------------------

**bin/otobo.Console.pl Admin::ITSM::Configitem::UpgradeTo11**  
Upgrade the complete Configuration Management Database (CMDB) from OTOBO 10 to OTOBO 11. All Configuration Item definitions will be changed, a dynamic field will be prepared for each Configuration Item attribute, and the data will be migrated.

The migration is executed in several steps, to allow for customization. This behavior can be disabled via the flag `--use-defaults`, which is only recommended for test systems, however. If you intend to use attributes globally, i.e. share them between several config item classes, you can use the flag `--no-namespace` to not end up with one separate dynamic field per class (this is useful, e.g. for an "Owner" or a "Customer", which are not specific to just one class). More detailed intervention can be done during the migration, too, in any case. The customization options which follow the first and the second step are:

1. In a first step all existing classes are evaluated and attribute maps from the previous attributes to Dynamic Fields which are to be created are prepared and written to the working directory. You can look at the map for each class, and change dynamic field names including their namespaces (the part before the "-") freely (within usual DF naming restrictions, including uniqueness, also shared between object types, e.g. ticket DFs), and also here use common dynamic fields between classes, if useful.
2. The definitions are prepared, this includes the class definitions as well as the dynamic field definitions. Per default just one page and section is created per CI class. On a productive system where you aim to use the migrated data, it is suggested to put some time into structuring the dynamic fields into different sections, and possibly even pages to receive nicer results. It might be worth to have a look at the ready to adopt classes for some inspiration. Since all legacy versions are to be migrated and versions can differ quite a bit, possibly a lot of files are generated here and you have to make the decision on whether you just want to improve the latest definition of each class, or all of them.
