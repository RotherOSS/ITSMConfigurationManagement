# --
# OTOBO is a web-based ticketing system for service organisations.
# --
# Copyright (C) 2019-2025 Rother OSS GmbH, https://otobo.io/
# --
# This program is free software: you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation, either version 3 of the License, or (at your option) any later version.
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <https://www.gnu.org/licenses/>.
# --
## nofilter(TidyAll::Plugin::OTOBO::TT::ScriptUsage)
<div class="oooContentGrid" style="grid-template-columns:[% Data.Widths | html %]">
[% RenderBlockStart("ContentCell") %]
    <div class="oooContentCell" style="[% Data.GridArea | html %]">
[% RenderBlockStart("HeaderRow") %]
        <h2 title="[% Translate(Data.Header) | html %]">[% Translate(Data.Header) | html %]</h2>
[% RenderBlockEnd("HeaderRow") %]
[% RenderBlockStart("FieldDisplayRow") %]
        <div class="FieldDisplayRow" style="grid-template-columns:[% Data.Widths | html %]">
[% RenderBlockStart("FieldDisplayCell") %]
[% IF Data.Type == 'Label' %]
            <label title="[% Translate(Data.Label) | html %]" style="[% Data.GridColumm | html %]">[% Translate(Data.Label) | html %]</label>
[% ELSIF Data.Type == 'Value' %]
            <p title="[% Data.Title %]" style="[% Data.GridColumn | html %]">[% Data.Value %]</p>
[% ELSIF Data.Type == 'ValueLink' %]
            <p title="[% Data.Title %]" style="[% Data.GridColumn | html %]"><a href="[% Data.Link | Interpolate %]"[% IF Data.LinkPreview %] data-trigger="floater" data-floater-url="[% Data.LinkPreview | Interpolate %]"[% END %] class="DynamicFieldLink">[% Data.Value %]</a></p>
[% ELSIF Data.Type == 'ValueRaw' %]
            <div style="[% Data.GridColumn | html %]">[% Data.Value %]</div>
[% ELSIF Data.Type == 'FullRow' %]
            <div style="grid-column: 1 / 3">[% Data.Value %]</div>
[% ELSIF Data.Type == 'Iframe' %]
            <div>
# execute IFrame JS asynchronously. Otherwise it could happen before our API was loaded
# the following JS code must be within the template, otherwise it could happen, that also this code itself is not loaded yet
<script>
function CheckIFrameHeight(IFrameID) {
    if (typeof Core === 'object' && typeof Core.Agent === 'object' && typeof ITSM.[% Data.Frontend | html %].ConfigItem.Zoom === 'object') {
        ITSM.[% Data.Frontend | html %].ConfigItem.Zoom.IframeAutoHeight($('#' + IFrameID));
    }
    else {
        window.setTimeout(function () {
            CheckIFrameHeight(IFrameID);
        }, 500);
    }
}
</script>
# Use the HTML5 sandbox attribute to prevent plugins and scripts from being executed in the browser.
# Append session info to URL because IE will not send cookies.
# Set 'allow-popups' to allow IE10+ to open links. ref: http://www.w3.org/html/wg/wiki/ChangeProposals/sandbox_allow_popups
                <iframe sandbox="allow-same-origin allow-popups ms-allow-popups allow-popups-to-escape-sandbox" width="100%" frameborder="0" id="Iframe[% Data.ConfigItemID | html %]" onload="window.setTimeout( function (){ CheckIFrameHeight('Iframe[% Data.ConfigItemID | html %]'); }, 500);" src="[% Env("Baselink") %]Action=[% Data.Frontend | html %]ITSMConfigItemAttachment;Subaction=HTMLView;ConfigItemID=[% Data.ConfigItemID | html %];VersionID=[% Data.VersionID | html %];[% Env("SessionName") | html %]=[% Env("SessionID") | html %]"></iframe>
            </div>
[% END %]
[% RenderBlockEnd("FieldDisplayCell") %]
        </div>
[% RenderBlockEnd("FieldDisplayRow") %]
[% RenderBlockStart("GenericHTML") %]
        [% Data.HTML %]
[% RenderBlockEnd("GenericHTML") %]
    </div>
[% RenderBlockEnd("ContentCell") %]
</div>
